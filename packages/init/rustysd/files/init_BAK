#!/bin/sh


## proc 
/bin/mount -t proc proc /proc


## sysfs
sysfs_opts=nodev,noexec,nosuid
/bin/mount -n -t sysfs -o ${sysfs_opts} sysfs /sys


## devfs
/bin/mount -n -t devtmpfs dev /dev -o nosuid,noexec,relatime,size=64k,nr_inodes=10240,mode=755


## mount devpts
mkdir /dev/pts
mount -t devpts none /dev/pts


## create shm
mkdir /dev/shm
mount -t tmpfs /dev/shm


## mount cgroup (v2)
mount -t cgroup2 none /sys/fs/cgroup/
#(
#mount -t tmpfs -o uid=0,gid=0,mode=0755,size=64k cgroup /sys/fs/cgroup
#cd /sys/fs/cgroup || exit 1
#
#awk '!/^#/ { if ($4 == 1) print $1 }' /proc/cgroups | while IFS= read -r sys; do
#  mkdir -p "$sys"
#    if ! mountpoint -q "$sys"; then
#        if ! mount -n -t cgroup -o "$sys" cgroup "$sys"; then
#	      rmdir "$sys" || true
#        fi
#    fi
#done
#)
#
### use hierarchy for memory
#echo 1 > /sys/fs/cgroup/memory/memory.use_hierarchy


## load modules 
grep -h MODALIAS /sys/bus/*/devices/*/uevent | cut -d= -f2 | xargs /sbin/modprobe -abq 2> /dev/null
grep -h MODALIAS /sys/bus/*/devices/*/uevent | cut -d= -f2 | xargs /sbin/modprobe -abq 2> /dev/null


# Configure networking
ip link set lo up
ip link set eth0 up


## start dhcp client
udhcpc -f -p /var/run/udhcpc.pid > /var/log/udhcpc.log 2>&1 &


for DIR in $(find /containers/ -type d -maxdepth 2 -mindepth 2); do
	NAME=${DIR##*/}
	TYPE=$(echo $DIR | cut -d / -f 3)

	sed "s#{{NAME}}#$NAME#g" /etc/unitfile.tpl | \
	sed "s#{{DIR}}#$DIR#g" | \
	sed "s#{{TYPE}}#$TYPE#g" > /unitfiles/$NAME.service

	mount -t overlay overlay -o lowerdir=$DIR/lower,upperdir=$DIR/rootfs,workdir=$DIR/tmp $DIR/rootfs
done


## start crun / runc container services
#for SV in mdevd rngd docker; do 
#	DIR=/containers/services/$SV
#	mkdir $DIR/workdir
#	mount -t overlay overlay -o lowerdir=$DIR/lower,upperdir=$DIR/rootfs,workdir=$DIR/workdir $DIR/rootfs
#	crun --log /var/log/crun.log run --bundle $DIR --no-pivot --detach $SV >> /var/log/$SV.log 2>&1
#done


#getty 115200 tty0 linux
#getty 115200 tty1 linux
#getty 115200 tty2 linux
#getty 115200 tty3 linux
#getty 115200 ttyS1 linux


## start systemd replacement as PID1
#exec /usr/sbin/rustysd

exec /bin/sh
